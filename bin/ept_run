#!/usr/bin/env python
import asyncio
import importlib
from ept.util import csv_util, date_util
from aiohttp import ClientSession
from aiohttp.connector import TCPConnector

log_manager = []


async def _task(sems, tasks, module_name, func, log_manager, args,
                verify_ssl=False):
    module = importlib.import_module('ept.core.' + module_name)
    sem = asyncio.Semaphore(sems)
    async with ClientSession(connector=TCPConnector(verify_ssl=verify_ssl))\
            as session:
        resps = asyncio.gather(
            *[getattr(module, func)(sem, session,
                                    log_manager, args)
              for _ in range(tasks)])
        await resps


def _run(sems, tasks, module_name, func, log_manager, *args):
    loop = asyncio.get_event_loop()
    future = asyncio.ensure_future(
        _task(sems, tasks, module_name, func, log_manager, args))
    loop.run_until_complete(future)


def main():
    csv_util.remove('log.csv')
    csv_util.create('log.csv')
    start_time = date_util.timestamp_now()
    _run(3200, 32000, 'http', 'get', log_manager,
         'http://127.0.0.1:60001/get', 'test')
    print(date_util.timestamp_now() - start_time)
    print(len(log_manager))


if __name__ == '__main__':
    main()
